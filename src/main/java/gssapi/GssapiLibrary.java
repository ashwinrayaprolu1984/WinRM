package gssapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.TypedPointer;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;
import org.bridj.cpp.CPPRuntime;
/**
 * Wrapper for library <b>gssapi</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("gssapi_krb5")
@Runtime(CPPRuntime.class) 
public class GssapiLibrary {
	static {
		BridJ.register();
	}
	public static final int GSS_C_SUPPLEMENTARY_OFFSET = 0;
	public static final int GSS_C_AF_NULLADDR = 255;
	public static final int GSS_C_PROT_READY_FLAG = 128;
	public static final int GSS_C_AF_NBS = 7;
	public static final int GSS_C_IDENTIFY_FLAG = 8192;
	public static final int GSS_C_AF_LOCAL = 1;
	public static final int GSS_C_AF_NS = 6;
	public static final int GSS_IOV_BUFFER_TYPE_PADDING = 9;
	public static final int GSS_C_CONF_FLAG = 16;
	public static final int GSS_C_AF_CCITT = 10;
	public static final int GSS_C_MUTUAL_FLAG = 2;
	public static final int GSS_C_AF_INET6 = 24;
	public static final int GSS_C_AF_DECnet = 12;
	public static final int GSS_C_SEQUENCE_FLAG = 8;
	public static final int GSS_C_ANON_FLAG = 64;
	public static final int GSS_IOV_BUFFER_TYPE_HEADER = 2;
	public static final int GSS_IOV_BUFFER_TYPE_FLAG_ALLOCATE = 65536;
	public static final int GSS_C_ROUTINE_ERROR_MASK = 255;
	public static final int GSS_C_AF_CHAOS = 5;
	public static final int GSS_IOV_BUFFER_TYPE_FLAG_ALLOCATED = 131072;
	public static final int GSS_C_ROUTINE_ERROR_OFFSET = 16;
	public static final int GSS_C_INTEG_FLAG = 32;
	public static final int GSS_IOV_BUFFER_TYPE_TRAILER = 7;
	public static final int GSS_C_AF_HYLINK = 15;
	public static final long GSS_C_INDEFINITE = 4294967295L;
	public static final int GSS_C_DELEG_POLICY_FLAG = 32768;
	public static final int GSS_C_DCE_STYLE = 4096;
	public static final int GSS_C_AF_LAT = 14;
	public static final int GSS_C_AF_INET = 2;
	public static final int GSS_IOV_BUFFER_TYPE_MECH_PARAMS = 3;
	public static final int GSS_IOV_BUFFER_TYPE_EMPTY = 0;
	public static final int GSS_C_AF_APPLETALK = 16;
	public static final int GSS_C_PRF_KEY_FULL = 0;
	public static final int GSS_C_BOTH = 0;
	public static final int GSS_IOV_BUFFER_TYPE_FLAG_MASK = -65536;
	public static final int GSS_C_ACCEPT = 2;
	public static final int GSS_C_AF_DATAKIT = 9;
	public static final int GSS_C_CALLING_ERROR_OFFSET = 24;
	public static final int GSS_C_QOP_DEFAULT = 0;
	public static final int GSS_C_PRF_KEY_PARTIAL = 1;
	public static final int GSS_C_AF_BSC = 17;
	public static final int GSS_C_AF_X25 = 21;
	public static final int GSS_C_AF_UNSPEC = 0;
	public static final int GSS_C_GSS_CODE = 1;
	public static final int GSS_KRB5_CONF_C_QOP_DES = 256;
	public static final int GSS_C_AF_DLI = 13;
	public static final int GSS_IOV_BUFFER_FLAG_ALLOCATED = 131072;
	public static final int GSS_C_CALLING_ERROR_MASK = 255;
	public static final int GSS_IOV_BUFFER_TYPE_SIGN_ONLY = 11;
	public static final int GSS_IOV_BUFFER_TYPE_DATA = 1;
	public static final int GSS_C_EXTENDED_ERROR_FLAG = 16384;
	public static final int GSS_C_AF_DSS = 18;
	public static final int GSS_C_AF_OSI = 19;
	public static final int GSS_C_AF_ECMA = 8;
	public static final int GSS_C_INITIATE = 1;
	public static final int GSS_C_SUPPLEMENTARY_MASK = 65535;
	public static final int GSS_C_DELEG_FLAG = 1;
	public static final int GSS_C_AF_PUP = 4;
	public static final int GSS_KRB5_CONF_C_QOP_DES3_KD = 512;
	public static final int GSS_C_TRANS_FLAG = 256;
	public static final int GSS_C_AF_SNA = 11;
	public static final int GSS_IOV_BUFFER_TYPE_STREAM = 10;
	public static final int GSS_C_MECH_CODE = 2;
	public static final int GSS_C_REPLAY_FLAG = 4;
	public static final int GSS_IOV_BUFFER_FLAG_ALLOCATE = 65536;
	public static final int GSS_S_COMPLETE = 0;
	public static final int GSS_C_AF_IMPLINK = 3;
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << (GSS_C_SUPPLEMENTARY_OFFSET + 4)
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << (GSS_C_SUPPLEMENTARY_OFFSET + 0)
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_CALLING_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_CALLING_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << (GSS_C_SUPPLEMENTARY_OFFSET + 3)
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << (GSS_C_SUPPLEMENTARY_OFFSET + 1)
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_CALLING_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << GSS_C_ROUTINE_ERROR_OFFSET
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * << (GSS_C_SUPPLEMENTARY_OFFSET + 2)
	 */
	public static native int gss_acquire_cred(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, int OM_uint321, Pointer<gss_OID_set_desc > gss_OID_set1, int gss_cred_usage_t1, Pointer<GssapiLibrary.gss_cred_id_t_desc_struct > gss_cred_id_tPtr1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1, Pointer<Integer > OM_uint32Ptr2);
	public static native int gss_release_cred(Pointer<Integer > OM_uint32Ptr1, Pointer<GssapiLibrary.gss_cred_id_t_desc_struct > gss_cred_id_tPtr1);
	public static native int gss_init_sec_context(Pointer<Integer > OM_uint32Ptr1,
	                                              GssapiLibrary.gss_cred_id_t_desc_struct gss_cred_id_t1,
	                                              Pointer<GssapiLibrary.gss_ctx_id_t_desc_struct > gss_ctx_id_tPtr1,
	                                              GssapiLibrary.gss_name_t_desc_struct gss_name_t1,
	                                              Pointer<gss_OID_desc > gss_OID1,
	                                              int OM_uint321,
	                                              int OM_uint322,
	                                              Pointer<gss_channel_bindings_struct > gss_channel_bindings_t1,
	                                              Pointer<gss_buffer_desc > gss_buffer_t1,
	                                              Pointer<Pointer<gss_OID_desc > > gss_OIDPtr1,
	                                              Pointer<gss_buffer_desc > gss_buffer_t2,
	                                              Pointer<Integer > OM_uint32Ptr2,
	                                              Pointer<Integer > OM_uint32Ptr3);
	public static native int gss_accept_sec_context(Pointer<Integer > OM_uint32Ptr1, Pointer<GssapiLibrary.gss_ctx_id_t_desc_struct > gss_ctx_id_tPtr1, GssapiLibrary.gss_cred_id_t_desc_struct gss_cred_id_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_channel_bindings_struct > gss_channel_bindings_t1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr1, Pointer<Pointer<gss_OID_desc > > gss_OIDPtr1, Pointer<gss_buffer_desc > gss_buffer_t2, Pointer<Integer > OM_uint32Ptr2, Pointer<Integer > OM_uint32Ptr3, Pointer<GssapiLibrary.gss_cred_id_t_desc_struct > gss_cred_id_tPtr1);
	public static native int gss_process_context_token(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_delete_sec_context(Pointer<Integer > OM_uint32Ptr1, Pointer<GssapiLibrary.gss_ctx_id_t_desc_struct > gss_ctx_id_tPtr1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_context_time(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<Integer > OM_uint32Ptr2);
	public static native int gss_get_mic(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, int gss_qop_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_buffer_desc > gss_buffer_t2);
	public static native int gss_verify_mic(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_buffer_desc > gss_buffer_t2, Pointer<Integer > gss_qop_tPtr1);
	public static native int gss_wrap(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, int int1, int gss_qop_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<Integer > intPtr1, Pointer<gss_buffer_desc > gss_buffer_t2);
	public static native int gss_unwrap(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_buffer_desc > gss_buffer_t2, Pointer<Integer > intPtr1, Pointer<Integer > gss_qop_tPtr1);
	public static native int gss_display_status(Pointer<Integer > OM_uint32Ptr1,
	                                            int OM_uint321,
	                                            int int1,
	                                            Pointer<gss_OID_desc > gss_OID1,
	                                            Pointer<Integer > OM_uint32Ptr2,
	                                            Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_indicate_mechs(Pointer<Integer > OM_uint32Ptr1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1);
	public static native int gss_compare_name(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, GssapiLibrary.gss_name_t_desc_struct gss_name_t2, Pointer<Integer > intPtr1);
	public static native int gss_display_name(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<Pointer<gss_OID_desc > > gss_OIDPtr1);
	public static native int gss_import_name(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_OID_desc > gss_OID1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr1);
	public static native int gss_export_name(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_release_name(Pointer<Integer > OM_uint32Ptr1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr1);
	public static native int gss_release_buffer(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_release_oid_set(Pointer<Integer > OM_uint32Ptr1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1);
	public static native int gss_inquire_cred(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_cred_id_t_desc_struct gss_cred_id_t1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr1, Pointer<Integer > OM_uint32Ptr2, Pointer<Integer > gss_cred_usage_tPtr1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1);
	public static native int gss_inquire_context(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr2, Pointer<Integer > OM_uint32Ptr2, Pointer<Pointer<gss_OID_desc > > gss_OIDPtr1, Pointer<Integer > OM_uint32Ptr3, Pointer<Integer > intPtr1, Pointer<Integer > intPtr2);
	public static native int gss_wrap_size_limit(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, int int1, int gss_qop_t1, int OM_uint321, Pointer<Integer > OM_uint32Ptr2);
	public static native int gss_add_cred(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_cred_id_t_desc_struct gss_cred_id_t1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<gss_OID_desc > gss_OID1, int gss_cred_usage_t1, int OM_uint321, int OM_uint322, Pointer<GssapiLibrary.gss_cred_id_t_desc_struct > gss_cred_id_tPtr1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1, Pointer<Integer > OM_uint32Ptr2, Pointer<Integer > OM_uint32Ptr3);
	public static native int gss_inquire_cred_by_mech(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_cred_id_t_desc_struct gss_cred_id_t1, Pointer<gss_OID_desc > gss_OID1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr1, Pointer<Integer > OM_uint32Ptr2, Pointer<Integer > OM_uint32Ptr3, Pointer<Integer > gss_cred_usage_tPtr1);
	public static native int gss_export_sec_context(Pointer<Integer > OM_uint32Ptr1, Pointer<GssapiLibrary.gss_ctx_id_t_desc_struct > gss_ctx_id_tPtr1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_import_sec_context(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<GssapiLibrary.gss_ctx_id_t_desc_struct > gss_ctx_id_tPtr1);
	public static native int gss_create_empty_oid_set(Pointer<Integer > OM_uint32Ptr1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1);
	public static native int gss_add_oid_set_member(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_OID_desc > gss_OID1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1);
	public static native int gss_test_oid_set_member(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_OID_desc > gss_OID1, Pointer<gss_OID_set_desc > gss_OID_set1, Pointer<Integer > intPtr1);
	public static native int gss_inquire_names_for_mech(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_OID_desc > gss_OID1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1);
	public static native int gss_inquire_mechs_for_name(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1);
	public static native int gss_canonicalize_name(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<gss_OID_desc > gss_OID1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr1);
	public static native int gss_duplicate_name(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<GssapiLibrary.gss_name_t_desc_struct > gss_name_tPtr1);
	public static native int gss_duplicate_oid(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_OID_desc > gss_OID1, Pointer<Pointer<gss_OID_desc > > gss_OIDPtr1);
	public static native int gss_release_oid(Pointer<Integer > OM_uint32Ptr1, Pointer<Pointer<gss_OID_desc > > gss_OIDPtr1);
	public static native int gss_oid_to_str(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_OID_desc > gss_OID1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_inquire_sec_context_by_oid(Pointer<Integer > minor_status, GssapiLibrary.gss_ctx_id_t_desc_struct context_handle, Pointer<gss_OID_desc > desired_object, Pointer<Pointer<gss_buffer_set_desc > > data_set);
	public static native int gss_set_sec_context_option(Pointer<Integer > minor_status, Pointer<GssapiLibrary.gss_ctx_id_t_desc_struct > context_handle, Pointer<gss_OID_desc > desired_object, Pointer<gss_buffer_desc > value);
	public static native int gss_set_cred_option(Pointer<Integer > minor_status, Pointer<GssapiLibrary.gss_cred_id_t_desc_struct > cred_handle, Pointer<gss_OID_desc > object, Pointer<gss_buffer_desc > value);
	public static native int gss_oid_equal(Pointer<gss_OID_desc > a, Pointer<gss_OID_desc > b);
	public static native int gss_create_empty_buffer_set(Pointer<Integer > minor_status, Pointer<Pointer<gss_buffer_set_desc > > buffer_set);
	public static native int gss_add_buffer_set_member(Pointer<Integer > minor_status, Pointer<gss_buffer_desc > member_buffer, Pointer<Pointer<gss_buffer_set_desc > > buffer_set);
	public static native int gss_release_buffer_set(Pointer<Integer > minor_status, Pointer<Pointer<gss_buffer_set_desc > > buffer_set);
	public static native int gss_inquire_cred_by_oid(Pointer<Integer > minor_status, GssapiLibrary.gss_cred_id_t_desc_struct cred_handle, Pointer<gss_OID_desc > desired_object, Pointer<Pointer<gss_buffer_set_desc > > data_set);
	/**
	 * SKIPPED:<br>
	 * Original signature : <code>__stdcall OM_uint32 gss_pseudo_random(OM_uint32*, gss_ctx_id_t, int, const gss_buffer_t, ssize_t, gss_buffer_t)</code><br>
	 * <i>native declaration : /Developer/SDKs/MacOSX10.5.sdk/usr/include/stddef.h:759</i><br>
	 * Original signature : <code>__stdcall OM_uint32 gss_pseudo_random(OM_uint32*, gss_ctx_id_t, int, const gss_buffer_t, ssize_t, gss_buffer_t)</code><br>
	 * __stdcall OM_uint32 gss_pseudo_random(OM_uint32* minor_status, gss_ctx_id_t context, int prf_key, const gss_buffer_t prf_in, ssize_t desired_output_len, gss_buffer_t prf_out);<br>
	 * Conversion Error : ssize_t (Unsupported type)
	 */
	public static native int gss_store_cred(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_cred_id_t_desc_struct gss_cred_id_t1, int gss_cred_usage_t1, Pointer<gss_OID_desc > gss_OID1, int OM_uint321, int OM_uint322, Pointer<Pointer<gss_OID_set_desc > > gss_OID_setPtr1, Pointer<Integer > gss_cred_usage_tPtr1);
	public static native int gss_context_query_attributes(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<gss_OID_desc > gss_OID1, Pointer<? > voidPtr1, @Ptr long size_t1);
	public static native int gss_sign(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, int int1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_buffer_desc > gss_buffer_t2);
	public static native int gss_verify(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_buffer_desc > gss_buffer_t2, Pointer<Integer > intPtr1);
	public static native int gss_seal(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, int int1, int int2, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<Integer > intPtr1, Pointer<gss_buffer_desc > gss_buffer_t2);
	public static native int gss_unseal(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_buffer_desc > gss_buffer_t2, Pointer<Integer > intPtr1, Pointer<Integer > intPtr2);
	public static native int gss_encapsulate_token(Pointer<gss_buffer_desc > gss_const_buffer_t1, Pointer<gss_OID_desc > gss_const_OID1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_decapsulate_token(Pointer<gss_buffer_desc > gss_const_buffer_t1, Pointer<gss_OID_desc > gss_const_OID1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_wrap_iov(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, int int1, int gss_qop_t1, Pointer<Integer > intPtr1, Pointer<gss_iov_buffer_desc > gss_iov_buffer_descPtr1, int int2);
	public static native int gss_unwrap_iov(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, Pointer<Integer > intPtr1, Pointer<Integer > gss_qop_tPtr1, Pointer<gss_iov_buffer_desc > gss_iov_buffer_descPtr1, int int1);
	public static native int gss_wrap_iov_length(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_ctx_id_t_desc_struct gss_ctx_id_t1, int int1, int gss_qop_t1, Pointer<Integer > intPtr1, Pointer<gss_iov_buffer_desc > gss_iov_buffer_descPtr1, int int2);
	public static native int gss_release_iov_buffer(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_iov_buffer_desc > gss_iov_buffer_descPtr1, int int1);
	public static native int gss_export_cred(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_cred_id_t_desc_struct gss_cred_id_t1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_import_cred(Pointer<Integer > OM_uint32Ptr1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<GssapiLibrary.gss_cred_id_t_desc_struct > gss_cred_id_tPtr1);
	public static native int gss_mo_set(Pointer<gss_OID_desc > mech, Pointer<gss_OID_desc > option, int enable, Pointer<gss_buffer_desc > value);
	public static native int gss_mo_get(Pointer<gss_OID_desc > mech, Pointer<gss_OID_desc > option, Pointer<gss_buffer_desc > value);
	public static native void gss_mo_list(Pointer<gss_OID_desc > mech, Pointer<Pointer<gss_OID_set_desc > > options);
	public static native int gss_mo_name(Pointer<gss_OID_desc > mech, Pointer<gss_OID_desc > options, Pointer<gss_buffer_desc > name);
	public static native int gss_inquire_saslname_for_mech(Pointer<Integer > minor_status, Pointer<gss_OID_desc > desired_mech, Pointer<gss_buffer_desc > sasl_mech_name, Pointer<gss_buffer_desc > mech_name, Pointer<gss_buffer_desc > mech_description);
	public static native int gss_inquire_mech_for_saslname(Pointer<Integer > minor_status, Pointer<gss_buffer_desc > sasl_mech_name, Pointer<Pointer<gss_OID_desc > > mech_type);
	public static native int gss_indicate_mechs_by_attrs(Pointer<Integer > minor_status, Pointer<gss_OID_set_desc > desired_mech_attrs, Pointer<gss_OID_set_desc > except_mech_attrs, Pointer<gss_OID_set_desc > critical_mech_attrs, Pointer<Pointer<gss_OID_set_desc > > mechs);
	public static native int gss_inquire_attrs_for_mech(Pointer<Integer > minor_status, Pointer<gss_OID_desc > mech, Pointer<Pointer<gss_OID_set_desc > > mech_attr, Pointer<Pointer<gss_OID_set_desc > > known_mech_attrs);
	public static native int gss_display_mech_attr(Pointer<Integer > minor_status, Pointer<gss_OID_desc > mech_attr, Pointer<gss_buffer_desc > name, Pointer<gss_buffer_desc > short_desc, Pointer<gss_buffer_desc > long_desc);
	public static native int gss_display_name_ext(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<gss_OID_desc > gss_OID1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_inquire_name(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<Integer > intPtr1, Pointer<Pointer<gss_OID_desc > > gss_OIDPtr1, Pointer<Pointer<gss_buffer_set_desc > > gss_buffer_set_tPtr1);
	public static native int gss_get_name_attribute(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<Integer > intPtr1, Pointer<Integer > intPtr2, Pointer<gss_buffer_desc > gss_buffer_t2, Pointer<gss_buffer_desc > gss_buffer_t3, Pointer<Integer > intPtr3);
	public static native int gss_set_name_attribute(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, int int1, Pointer<gss_buffer_desc > gss_buffer_t1, Pointer<gss_buffer_desc > gss_buffer_t2);
	public static native int gss_delete_name_attribute(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native int gss_export_name_composite(Pointer<Integer > OM_uint32Ptr1, GssapiLibrary.gss_name_t_desc_struct gss_name_t1, Pointer<gss_buffer_desc > gss_buffer_t1);
	public static native Pointer<Byte > gss_oid_to_name(Pointer<gss_OID_desc > oid);
	public static native Pointer<gss_OID_desc > gss_name_to_oid(Pointer<Byte > name);
	/// Pointer to unknown (opaque) type
	public static class gss_ctx_id_t_desc_struct extends TypedPointer {
		public gss_ctx_id_t_desc_struct(long address) {
			super(address);
		}
		public gss_ctx_id_t_desc_struct(Pointer address) {
			super(address);
		}
	};
	/// Pointer to unknown (opaque) type
	public static class gss_name_t_desc_struct extends TypedPointer {
		public gss_name_t_desc_struct(long address) {
			super(address);
		}
		public gss_name_t_desc_struct(Pointer address) {
			super(address);
		}
	};
	/// Pointer to unknown (opaque) type
	public static class gss_cred_id_t_desc_struct extends TypedPointer {
		public gss_cred_id_t_desc_struct(long address) {
			super(address);
		}
		public gss_cred_id_t_desc_struct(Pointer address) {
			super(address);
		}
	};
}
